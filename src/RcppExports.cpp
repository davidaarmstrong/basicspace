// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// AMREG
void AMREG(int NRESPONDENTS, int NN, int NQ, int NRESP, int NMISS, const std::vector<double>& ZZ, const std::vector<double>& XMISS, double BTSUM, double ZZSUM, const std::vector<double>& ZTSUM, double XSIGM, const Eigen::MatrixXi& KDATA, const Eigen::MatrixXd& XDATA, std::vector<double>& FITS, std::vector<double>& PSIMATRIX);
RcppExport SEXP _basicspace_AMREG(SEXP NRESPONDENTSSEXP, SEXP NNSEXP, SEXP NQSEXP, SEXP NRESPSEXP, SEXP NMISSSEXP, SEXP ZZSEXP, SEXP XMISSSEXP, SEXP BTSUMSEXP, SEXP ZZSUMSEXP, SEXP ZTSUMSEXP, SEXP XSIGMSEXP, SEXP KDATASEXP, SEXP XDATASEXP, SEXP FITSSEXP, SEXP PSIMATRIXSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NN(NNSEXP);
    Rcpp::traits::input_parameter< int >::type NQ(NQSEXP);
    Rcpp::traits::input_parameter< int >::type NRESP(NRESPSEXP);
    Rcpp::traits::input_parameter< int >::type NMISS(NMISSSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type ZZ(ZZSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type XMISS(XMISSSEXP);
    Rcpp::traits::input_parameter< double >::type BTSUM(BTSUMSEXP);
    Rcpp::traits::input_parameter< double >::type ZZSUM(ZZSUMSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type ZTSUM(ZTSUMSEXP);
    Rcpp::traits::input_parameter< double >::type XSIGM(XSIGMSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXi& >::type KDATA(KDATASEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type XDATA(XDATASEXP);
    Rcpp::traits::input_parameter< std::vector<double>& >::type FITS(FITSSEXP);
    Rcpp::traits::input_parameter< std::vector<double>& >::type PSIMATRIX(PSIMATRIXSEXP);
    AMREG(NRESPONDENTS, NN, NQ, NRESP, NMISS, ZZ, XMISS, BTSUM, ZZSUM, ZTSUM, XSIGM, KDATA, XDATA, FITS, PSIMATRIX);
    return R_NilValue;
END_RCPP
}
// BLACKB
void BLACKB(int NP, int NRESPONDENTS, int NISSUES, int NDIMENSIONS, int NF, const Eigen::MatrixXd& XBIGONE, Eigen::MatrixXd& XDATA, Eigen::MatrixXd& W, double& SVSUM, Eigen::VectorXd& FITS2, int IPRNT);
RcppExport SEXP _basicspace_BLACKB(SEXP NPSEXP, SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NDIMENSIONSSEXP, SEXP NFSEXP, SEXP XBIGONESEXP, SEXP XDATASEXP, SEXP WSEXP, SEXP SVSUMSEXP, SEXP FITS2SEXP, SEXP IPRNTSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NP(NPSEXP);
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NDIMENSIONS(NDIMENSIONSSEXP);
    Rcpp::traits::input_parameter< int >::type NF(NFSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type XBIGONE(XBIGONESEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type XDATA(XDATASEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type W(WSEXP);
    Rcpp::traits::input_parameter< double& >::type SVSUM(SVSUMSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type FITS2(FITS2SEXP);
    Rcpp::traits::input_parameter< int >::type IPRNT(IPRNTSEXP);
    BLACKB(NP, NRESPONDENTS, NISSUES, NDIMENSIONS, NF, XBIGONE, XDATA, W, SVSUM, FITS2, IPRNT);
    return R_NilValue;
END_RCPP
}
// BLACKBOXF
void BLACKBOXF(int NRESPONDENTS, int NISSUES, int NDIMENSIONS, int NMISSING, const Eigen::MatrixXd& KMISS, int MINSCALE, const Eigen::VectorXi& MID, const Eigen::MatrixXd& KISSUE, Eigen::VectorXd& FITS, Eigen::MatrixXd& PSIMATRIX, Eigen::MatrixXd& WMATRIX, Eigen::VectorXi& LRESPONDENTS, Eigen::VectorXi& LMARK, Eigen::VectorXd& FITS2, int& EXITSTATUS);
RcppExport SEXP _basicspace_BLACKBOXF(SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NDIMENSIONSSEXP, SEXP NMISSINGSEXP, SEXP KMISSSEXP, SEXP MINSCALESEXP, SEXP MIDSEXP, SEXP KISSUESEXP, SEXP FITSSEXP, SEXP PSIMATRIXSEXP, SEXP WMATRIXSEXP, SEXP LRESPONDENTSSEXP, SEXP LMARKSEXP, SEXP FITS2SEXP, SEXP EXITSTATUSSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NDIMENSIONS(NDIMENSIONSSEXP);
    Rcpp::traits::input_parameter< int >::type NMISSING(NMISSINGSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type KMISS(KMISSSEXP);
    Rcpp::traits::input_parameter< int >::type MINSCALE(MINSCALESEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXi& >::type MID(MIDSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type KISSUE(KISSUESEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type FITS(FITSSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type PSIMATRIX(PSIMATRIXSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type WMATRIX(WMATRIXSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi& >::type LRESPONDENTS(LRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi& >::type LMARK(LMARKSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type FITS2(FITS2SEXP);
    Rcpp::traits::input_parameter< int& >::type EXITSTATUS(EXITSTATUSSEXP);
    BLACKBOXF(NRESPONDENTS, NISSUES, NDIMENSIONS, NMISSING, KMISS, MINSCALE, MID, KISSUE, FITS, PSIMATRIX, WMATRIX, LRESPONDENTS, LMARK, FITS2, EXITSTATUS);
    return R_NilValue;
END_RCPP
}
// BLACKBOXT
void BLACKBOXT(int NRESPONDENTS, int NISSUES, int NDIMENSIONS, int NMISSING, const Eigen::MatrixXd& KMISS, int MINSCALE, const Eigen::VectorXi& MID, Eigen::MatrixXd& KISSUE, Eigen::VectorXd& FITS, Eigen::MatrixXd& PSIMATRIX, Eigen::MatrixXd& WMATRIX, Eigen::VectorXi& LRESPONDENTS, Eigen::VectorXi& LMARK, Eigen::VectorXd& FITS2, int& EXITSTATUS);
RcppExport SEXP _basicspace_BLACKBOXT(SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NDIMENSIONSSEXP, SEXP NMISSINGSEXP, SEXP KMISSSEXP, SEXP MINSCALESEXP, SEXP MIDSEXP, SEXP KISSUESEXP, SEXP FITSSEXP, SEXP PSIMATRIXSEXP, SEXP WMATRIXSEXP, SEXP LRESPONDENTSSEXP, SEXP LMARKSEXP, SEXP FITS2SEXP, SEXP EXITSTATUSSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NDIMENSIONS(NDIMENSIONSSEXP);
    Rcpp::traits::input_parameter< int >::type NMISSING(NMISSINGSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type KMISS(KMISSSEXP);
    Rcpp::traits::input_parameter< int >::type MINSCALE(MINSCALESEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXi& >::type MID(MIDSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type KISSUE(KISSUESEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type FITS(FITSSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type PSIMATRIX(PSIMATRIXSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type WMATRIX(WMATRIXSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi& >::type LRESPONDENTS(LRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi& >::type LMARK(LMARKSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type FITS2(FITS2SEXP);
    Rcpp::traits::input_parameter< int& >::type EXITSTATUS(EXITSTATUSSEXP);
    BLACKBOXT(NRESPONDENTS, NISSUES, NDIMENSIONS, NMISSING, KMISS, MINSCALE, MID, KISSUE, FITS, PSIMATRIX, WMATRIX, LRESPONDENTS, LMARK, FITS2, EXITSTATUS);
    return R_NilValue;
END_RCPP
}
// BLACKBT
void BLACKBT(int NRESPONDENTS, int NISSUES, int NDIMENSIONS, int NP, int NY, int NF, int NFX, const Eigen::MatrixXd& XBIGONE, Eigen::MatrixXd& XDATA, Eigen::MatrixXd& W, double& SVSUM, Eigen::VectorXd& FITS2);
RcppExport SEXP _basicspace_BLACKBT(SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NDIMENSIONSSEXP, SEXP NPSEXP, SEXP NYSEXP, SEXP NFSEXP, SEXP NFXSEXP, SEXP XBIGONESEXP, SEXP XDATASEXP, SEXP WSEXP, SEXP SVSUMSEXP, SEXP FITS2SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NDIMENSIONS(NDIMENSIONSSEXP);
    Rcpp::traits::input_parameter< int >::type NP(NPSEXP);
    Rcpp::traits::input_parameter< int >::type NY(NYSEXP);
    Rcpp::traits::input_parameter< int >::type NF(NFSEXP);
    Rcpp::traits::input_parameter< int >::type NFX(NFXSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type XBIGONE(XBIGONESEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type XDATA(XDATASEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type W(WSEXP);
    Rcpp::traits::input_parameter< double& >::type SVSUM(SVSUMSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type FITS2(FITS2SEXP);
    BLACKBT(NRESPONDENTS, NISSUES, NDIMENSIONS, NP, NY, NF, NFX, XBIGONE, XDATA, W, SVSUM, FITS2);
    return R_NilValue;
END_RCPP
}
// CORR2
void CORR2(int NRESPONDENTS, int NISSUES, int NP, int NY, Eigen::MatrixXd& X, Eigen::MatrixXd& R, Eigen::VectorXi& LL, Eigen::VectorXi& MPOS, int& KS, int& KPOS, int IPRNT);
RcppExport SEXP _basicspace_CORR2(SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NPSEXP, SEXP NYSEXP, SEXP XSEXP, SEXP RSEXP, SEXP LLSEXP, SEXP MPOSSEXP, SEXP KSSEXP, SEXP KPOSSEXP, SEXP IPRNTSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NP(NPSEXP);
    Rcpp::traits::input_parameter< int >::type NY(NYSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type R(RSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi& >::type LL(LLSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi& >::type MPOS(MPOSSEXP);
    Rcpp::traits::input_parameter< int& >::type KS(KSSEXP);
    Rcpp::traits::input_parameter< int& >::type KPOS(KPOSSEXP);
    Rcpp::traits::input_parameter< int >::type IPRNT(IPRNTSEXP);
    CORR2(NRESPONDENTS, NISSUES, NP, NY, X, R, LL, MPOS, KS, KPOS, IPRNT);
    return R_NilValue;
END_RCPP
}
// CORR22
void CORR22(int NRESPONDENTS, int NISSUES, int NP, int NY, const Eigen::MatrixXd& X, Eigen::MatrixXd& R, Eigen::VectorXi& LL, Eigen::VectorXi& MPOS, int& KS, int& KPOS, int IPRNT);
RcppExport SEXP _basicspace_CORR22(SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NPSEXP, SEXP NYSEXP, SEXP XSEXP, SEXP RSEXP, SEXP LLSEXP, SEXP MPOSSEXP, SEXP KSSEXP, SEXP KPOSSEXP, SEXP IPRNTSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NP(NPSEXP);
    Rcpp::traits::input_parameter< int >::type NY(NYSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type R(RSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi& >::type LL(LLSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi& >::type MPOS(MPOSSEXP);
    Rcpp::traits::input_parameter< int& >::type KS(KSSEXP);
    Rcpp::traits::input_parameter< int& >::type KPOS(KPOSSEXP);
    Rcpp::traits::input_parameter< int >::type IPRNT(IPRNTSEXP);
    CORR22(NRESPONDENTS, NISSUES, NP, NY, X, R, LL, MPOS, KS, KPOS, IPRNT);
    return R_NilValue;
END_RCPP
}
// MCKALNEW
void MCKALNEW(int NRESPONDENTS, int NISSUES, int NSELFPOS, int NMISSING, const Eigen::VectorXd& KMISS, int POLARITY, const Eigen::VectorXi& MID, const Eigen::MatrixXd& KISSUE, Eigen::VectorXd& FITS, Eigen::MatrixXd& PSIMATRIX, Eigen::VectorXd& STIMCOORDS, Eigen::VectorXd& EIGENVALUES, int& EXITSTATUS);
RcppExport SEXP _basicspace_MCKALNEW(SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NSELFPOSSEXP, SEXP NMISSINGSEXP, SEXP KMISSSEXP, SEXP POLARITYSEXP, SEXP MIDSEXP, SEXP KISSUESEXP, SEXP FITSSEXP, SEXP PSIMATRIXSEXP, SEXP STIMCOORDSSEXP, SEXP EIGENVALUESSEXP, SEXP EXITSTATUSSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NSELFPOS(NSELFPOSSEXP);
    Rcpp::traits::input_parameter< int >::type NMISSING(NMISSINGSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type KMISS(KMISSSEXP);
    Rcpp::traits::input_parameter< int >::type POLARITY(POLARITYSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXi& >::type MID(MIDSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type KISSUE(KISSUESEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type FITS(FITSSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type PSIMATRIX(PSIMATRIXSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type STIMCOORDS(STIMCOORDSSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type EIGENVALUES(EIGENVALUESSEXP);
    Rcpp::traits::input_parameter< int& >::type EXITSTATUS(EXITSTATUSSEXP);
    MCKALNEW(NRESPONDENTS, NISSUES, NSELFPOS, NMISSING, KMISS, POLARITY, MID, KISSUE, FITS, PSIMATRIX, STIMCOORDS, EIGENVALUES, EXITSTATUS);
    return R_NilValue;
END_RCPP
}
// REG
void REG(int NRESPONDENTS, int NISSUES, int NDIMENSIONS, int NP, int NF, int NY, std::vector<double>& TSUM, Eigen::MatrixXd& W, Eigen::MatrixXd& XS, Eigen::MatrixXd& X, Eigen::MatrixXd& PSI, int IPRNT, int ILAST, int KKK, double& AREG, double& BREG);
RcppExport SEXP _basicspace_REG(SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NDIMENSIONSSEXP, SEXP NPSEXP, SEXP NFSEXP, SEXP NYSEXP, SEXP TSUMSEXP, SEXP WSEXP, SEXP XSSEXP, SEXP XSEXP, SEXP PSISEXP, SEXP IPRNTSEXP, SEXP ILASTSEXP, SEXP KKKSEXP, SEXP AREGSEXP, SEXP BREGSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NDIMENSIONS(NDIMENSIONSSEXP);
    Rcpp::traits::input_parameter< int >::type NP(NPSEXP);
    Rcpp::traits::input_parameter< int >::type NF(NFSEXP);
    Rcpp::traits::input_parameter< int >::type NY(NYSEXP);
    Rcpp::traits::input_parameter< std::vector<double>& >::type TSUM(TSUMSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type W(WSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type XS(XSSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type PSI(PSISEXP);
    Rcpp::traits::input_parameter< int >::type IPRNT(IPRNTSEXP);
    Rcpp::traits::input_parameter< int >::type ILAST(ILASTSEXP);
    Rcpp::traits::input_parameter< int >::type KKK(KKKSEXP);
    Rcpp::traits::input_parameter< double& >::type AREG(AREGSEXP);
    Rcpp::traits::input_parameter< double& >::type BREG(BREGSEXP);
    REG(NRESPONDENTS, NISSUES, NDIMENSIONS, NP, NF, NY, TSUM, W, XS, X, PSI, IPRNT, ILAST, KKK, AREG, BREG);
    return R_NilValue;
END_RCPP
}
// REG2
void REG2(int NRESPONDENTS, int NISSUES, int NDIMENSIONS, int NP, int NF, int NY, Eigen::MatrixXd& W, Eigen::MatrixXd& XS, Eigen::MatrixXd& X, Eigen::MatrixXd& PSI, double& PXB, double& PXS, int KKK, int IPRNT, double AREG, double& BREG);
RcppExport SEXP _basicspace_REG2(SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NDIMENSIONSSEXP, SEXP NPSEXP, SEXP NFSEXP, SEXP NYSEXP, SEXP WSEXP, SEXP XSSEXP, SEXP XSEXP, SEXP PSISEXP, SEXP PXBSEXP, SEXP PXSSEXP, SEXP KKKSEXP, SEXP IPRNTSEXP, SEXP AREGSEXP, SEXP BREGSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NDIMENSIONS(NDIMENSIONSSEXP);
    Rcpp::traits::input_parameter< int >::type NP(NPSEXP);
    Rcpp::traits::input_parameter< int >::type NF(NFSEXP);
    Rcpp::traits::input_parameter< int >::type NY(NYSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type W(WSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type XS(XSSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type PSI(PSISEXP);
    Rcpp::traits::input_parameter< double& >::type PXB(PXBSEXP);
    Rcpp::traits::input_parameter< double& >::type PXS(PXSSEXP);
    Rcpp::traits::input_parameter< int >::type KKK(KKKSEXP);
    Rcpp::traits::input_parameter< int >::type IPRNT(IPRNTSEXP);
    Rcpp::traits::input_parameter< double >::type AREG(AREGSEXP);
    Rcpp::traits::input_parameter< double& >::type BREG(BREGSEXP);
    REG2(NRESPONDENTS, NISSUES, NDIMENSIONS, NP, NF, NY, W, XS, X, PSI, PXB, PXS, KKK, IPRNT, AREG, BREG);
    return R_NilValue;
END_RCPP
}
// REG2T
void REG2T(int NRESPONDENTS, int NISSUES, int NDIMENSIONS, int NP, int NF, int NY, Eigen::MatrixXd& W, Eigen::MatrixXd& XS, Eigen::MatrixXd& X, Eigen::MatrixXd& PSI, double& PXB, double& PXS, int KKK, int NWHO, double& BREG);
RcppExport SEXP _basicspace_REG2T(SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NDIMENSIONSSEXP, SEXP NPSEXP, SEXP NFSEXP, SEXP NYSEXP, SEXP WSEXP, SEXP XSSEXP, SEXP XSEXP, SEXP PSISEXP, SEXP PXBSEXP, SEXP PXSSEXP, SEXP KKKSEXP, SEXP NWHOSEXP, SEXP BREGSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NDIMENSIONS(NDIMENSIONSSEXP);
    Rcpp::traits::input_parameter< int >::type NP(NPSEXP);
    Rcpp::traits::input_parameter< int >::type NF(NFSEXP);
    Rcpp::traits::input_parameter< int >::type NY(NYSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type W(WSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type XS(XSSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type PSI(PSISEXP);
    Rcpp::traits::input_parameter< double& >::type PXB(PXBSEXP);
    Rcpp::traits::input_parameter< double& >::type PXS(PXSSEXP);
    Rcpp::traits::input_parameter< int >::type KKK(KKKSEXP);
    Rcpp::traits::input_parameter< int >::type NWHO(NWHOSEXP);
    Rcpp::traits::input_parameter< double& >::type BREG(BREGSEXP);
    REG2T(NRESPONDENTS, NISSUES, NDIMENSIONS, NP, NF, NY, W, XS, X, PSI, PXB, PXS, KKK, NWHO, BREG);
    return R_NilValue;
END_RCPP
}
// REGA
void REGA(int NISSUES, int NDIMENSIONS, int NS, int NF, const Eigen::MatrixXd& A, const Eigen::VectorXd& Y, Eigen::VectorXd& V, int IPRNT);
RcppExport SEXP _basicspace_REGA(SEXP NISSUESSEXP, SEXP NDIMENSIONSSEXP, SEXP NSSEXP, SEXP NFSEXP, SEXP ASEXP, SEXP YSEXP, SEXP VSEXP, SEXP IPRNTSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NDIMENSIONS(NDIMENSIONSSEXP);
    Rcpp::traits::input_parameter< int >::type NS(NSSEXP);
    Rcpp::traits::input_parameter< int >::type NF(NFSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type V(VSEXP);
    Rcpp::traits::input_parameter< int >::type IPRNT(IPRNTSEXP);
    REGA(NISSUES, NDIMENSIONS, NS, NF, A, Y, V, IPRNT);
    return R_NilValue;
END_RCPP
}
// REGAT
void REGAT(int NRESPONDENTS, int NDIMENSIONS, int NS, int NF, const Eigen::MatrixXd& A, const Eigen::VectorXd& Y, Eigen::VectorXd& V);
RcppExport SEXP _basicspace_REGAT(SEXP NRESPONDENTSSEXP, SEXP NDIMENSIONSSEXP, SEXP NSSEXP, SEXP NFSEXP, SEXP ASEXP, SEXP YSEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NDIMENSIONS(NDIMENSIONSSEXP);
    Rcpp::traits::input_parameter< int >::type NS(NSSEXP);
    Rcpp::traits::input_parameter< int >::type NF(NFSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type V(VSEXP);
    REGAT(NRESPONDENTS, NDIMENSIONS, NS, NF, A, Y, V);
    return R_NilValue;
END_RCPP
}
// REGT
void REGT(int NRESPONDENTS, int NISSUES, int NDIMENSIONS, int NP, int NF, int NY, std::vector<double>& TSUM, Eigen::MatrixXd& W, Eigen::MatrixXd& XS, Eigen::MatrixXd& X, Eigen::MatrixXd& PSI, int IPRNT, int ILAST, int KKK, double& AREG);
RcppExport SEXP _basicspace_REGT(SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NDIMENSIONSSEXP, SEXP NPSEXP, SEXP NFSEXP, SEXP NYSEXP, SEXP TSUMSEXP, SEXP WSEXP, SEXP XSSEXP, SEXP XSEXP, SEXP PSISEXP, SEXP IPRNTSEXP, SEXP ILASTSEXP, SEXP KKKSEXP, SEXP AREGSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NDIMENSIONS(NDIMENSIONSSEXP);
    Rcpp::traits::input_parameter< int >::type NP(NPSEXP);
    Rcpp::traits::input_parameter< int >::type NF(NFSEXP);
    Rcpp::traits::input_parameter< int >::type NY(NYSEXP);
    Rcpp::traits::input_parameter< std::vector<double>& >::type TSUM(TSUMSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type W(WSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type XS(XSSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type PSI(PSISEXP);
    Rcpp::traits::input_parameter< int >::type IPRNT(IPRNTSEXP);
    Rcpp::traits::input_parameter< int >::type ILAST(ILASTSEXP);
    Rcpp::traits::input_parameter< int >::type KKK(KKKSEXP);
    Rcpp::traits::input_parameter< double& >::type AREG(AREGSEXP);
    REGT(NRESPONDENTS, NISSUES, NDIMENSIONS, NP, NF, NY, TSUM, W, XS, X, PSI, IPRNT, ILAST, KKK, AREG);
    return R_NilValue;
END_RCPP
}
// RSQUR
void RSQUR(int NRESPONDENTS, int NISSUES, int NP, int NY, double& R, const Eigen::MatrixXd& A, const Eigen::MatrixXd& B, int IPRNT);
RcppExport SEXP _basicspace_RSQUR(SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NPSEXP, SEXP NYSEXP, SEXP RSEXP, SEXP ASEXP, SEXP BSEXP, SEXP IPRNTSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NP(NPSEXP);
    Rcpp::traits::input_parameter< int >::type NY(NYSEXP);
    Rcpp::traits::input_parameter< double& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type IPRNT(IPRNTSEXP);
    RSQUR(NRESPONDENTS, NISSUES, NP, NY, R, A, B, IPRNT);
    return R_NilValue;
END_RCPP
}
// blackboxf_wrapper
SEXP blackboxf_wrapper(SEXP NRESPONDENTS_SEXP, SEXP NISSUES_SEXP, SEXP NDIMENSIONS_SEXP, SEXP NMISSING_SEXP, SEXP KMISS_SEXP, SEXP MINSCALE_SEXP, SEXP MID_SEXP, SEXP KISSUE_SEXP, SEXP FITS_SEXP, SEXP PSIMATRIX_SEXP, SEXP WMATRIX_SEXP, SEXP LRESPONDENTS_SEXP, SEXP LMARK_SEXP, SEXP FITS2_SEXP, SEXP EXITSTATUS_SEXP);
RcppExport SEXP _basicspace_blackboxf_wrapper(SEXP NRESPONDENTS_SEXPSEXP, SEXP NISSUES_SEXPSEXP, SEXP NDIMENSIONS_SEXPSEXP, SEXP NMISSING_SEXPSEXP, SEXP KMISS_SEXPSEXP, SEXP MINSCALE_SEXPSEXP, SEXP MID_SEXPSEXP, SEXP KISSUE_SEXPSEXP, SEXP FITS_SEXPSEXP, SEXP PSIMATRIX_SEXPSEXP, SEXP WMATRIX_SEXPSEXP, SEXP LRESPONDENTS_SEXPSEXP, SEXP LMARK_SEXPSEXP, SEXP FITS2_SEXPSEXP, SEXP EXITSTATUS_SEXPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type NRESPONDENTS_SEXP(NRESPONDENTS_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type NISSUES_SEXP(NISSUES_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type NDIMENSIONS_SEXP(NDIMENSIONS_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type NMISSING_SEXP(NMISSING_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type KMISS_SEXP(KMISS_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type MINSCALE_SEXP(MINSCALE_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type MID_SEXP(MID_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type KISSUE_SEXP(KISSUE_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type FITS_SEXP(FITS_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type PSIMATRIX_SEXP(PSIMATRIX_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type WMATRIX_SEXP(WMATRIX_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type LRESPONDENTS_SEXP(LRESPONDENTS_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type LMARK_SEXP(LMARK_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type FITS2_SEXP(FITS2_SEXPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type EXITSTATUS_SEXP(EXITSTATUS_SEXPSEXP);
    rcpp_result_gen = Rcpp::wrap(blackboxf_wrapper(NRESPONDENTS_SEXP, NISSUES_SEXP, NDIMENSIONS_SEXP, NMISSING_SEXP, KMISS_SEXP, MINSCALE_SEXP, MID_SEXP, KISSUE_SEXP, FITS_SEXP, PSIMATRIX_SEXP, WMATRIX_SEXP, LRESPONDENTS_SEXP, LMARK_SEXP, FITS2_SEXP, EXITSTATUS_SEXP));
    return rcpp_result_gen;
END_RCPP
}
// blackboxt_wrapper
List blackboxt_wrapper(int NRESPONDENTS, int NISSUES, int NDIMENSIONS, int NMISSING, NumericMatrix KMISS, int MINSCALE, IntegerVector MID, NumericMatrix KISSUE, NumericVector FITS, NumericMatrix PSIMATRIX, NumericMatrix WMATRIX, IntegerVector LRESPONDENTS, IntegerVector LMARK, NumericVector FITS2, int EXITSTATUS);
RcppExport SEXP _basicspace_blackboxt_wrapper(SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NDIMENSIONSSEXP, SEXP NMISSINGSEXP, SEXP KMISSSEXP, SEXP MINSCALESEXP, SEXP MIDSEXP, SEXP KISSUESEXP, SEXP FITSSEXP, SEXP PSIMATRIXSEXP, SEXP WMATRIXSEXP, SEXP LRESPONDENTSSEXP, SEXP LMARKSEXP, SEXP FITS2SEXP, SEXP EXITSTATUSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NDIMENSIONS(NDIMENSIONSSEXP);
    Rcpp::traits::input_parameter< int >::type NMISSING(NMISSINGSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type KMISS(KMISSSEXP);
    Rcpp::traits::input_parameter< int >::type MINSCALE(MINSCALESEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type MID(MIDSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type KISSUE(KISSUESEXP);
    Rcpp::traits::input_parameter< NumericVector >::type FITS(FITSSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type PSIMATRIX(PSIMATRIXSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type WMATRIX(WMATRIXSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type LRESPONDENTS(LRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type LMARK(LMARKSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type FITS2(FITS2SEXP);
    Rcpp::traits::input_parameter< int >::type EXITSTATUS(EXITSTATUSSEXP);
    rcpp_result_gen = Rcpp::wrap(blackboxt_wrapper(NRESPONDENTS, NISSUES, NDIMENSIONS, NMISSING, KMISS, MINSCALE, MID, KISSUE, FITS, PSIMATRIX, WMATRIX, LRESPONDENTS, LMARK, FITS2, EXITSTATUS));
    return rcpp_result_gen;
END_RCPP
}
// mckalnew_wrapper
List mckalnew_wrapper(int NRESPONDENTS, int NISSUES, int NDIMENSIONS, int NSCALE, NumericMatrix KDATA, int MINSCALE, IntegerVector MID, NumericVector WEIGHTS, NumericVector VPARAMETERS, NumericVector KISSUE, NumericMatrix KMATRIX, double CONVERGE, int EXITSTATUS);
RcppExport SEXP _basicspace_mckalnew_wrapper(SEXP NRESPONDENTSSEXP, SEXP NISSUESSEXP, SEXP NDIMENSIONSSEXP, SEXP NSCALESEXP, SEXP KDATASEXP, SEXP MINSCALESEXP, SEXP MIDSEXP, SEXP WEIGHTSSEXP, SEXP VPARAMETERSSEXP, SEXP KISSUESEXP, SEXP KMATRIXSEXP, SEXP CONVERGESEXP, SEXP EXITSTATUSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NRESPONDENTS(NRESPONDENTSSEXP);
    Rcpp::traits::input_parameter< int >::type NISSUES(NISSUESSEXP);
    Rcpp::traits::input_parameter< int >::type NDIMENSIONS(NDIMENSIONSSEXP);
    Rcpp::traits::input_parameter< int >::type NSCALE(NSCALESEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type KDATA(KDATASEXP);
    Rcpp::traits::input_parameter< int >::type MINSCALE(MINSCALESEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type MID(MIDSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type WEIGHTS(WEIGHTSSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type VPARAMETERS(VPARAMETERSSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type KISSUE(KISSUESEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type KMATRIX(KMATRIXSEXP);
    Rcpp::traits::input_parameter< double >::type CONVERGE(CONVERGESEXP);
    Rcpp::traits::input_parameter< int >::type EXITSTATUS(EXITSTATUSSEXP);
    rcpp_result_gen = Rcpp::wrap(mckalnew_wrapper(NRESPONDENTS, NISSUES, NDIMENSIONS, NSCALE, KDATA, MINSCALE, MID, WEIGHTS, VPARAMETERS, KISSUE, KMATRIX, CONVERGE, EXITSTATUS));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_basicspace_AMREG", (DL_FUNC) &_basicspace_AMREG, 15},
    {"_basicspace_BLACKB", (DL_FUNC) &_basicspace_BLACKB, 11},
    {"_basicspace_BLACKBOXF", (DL_FUNC) &_basicspace_BLACKBOXF, 15},
    {"_basicspace_BLACKBOXT", (DL_FUNC) &_basicspace_BLACKBOXT, 15},
    {"_basicspace_BLACKBT", (DL_FUNC) &_basicspace_BLACKBT, 12},
    {"_basicspace_CORR2", (DL_FUNC) &_basicspace_CORR2, 11},
    {"_basicspace_CORR22", (DL_FUNC) &_basicspace_CORR22, 11},
    {"_basicspace_MCKALNEW", (DL_FUNC) &_basicspace_MCKALNEW, 13},
    {"_basicspace_REG", (DL_FUNC) &_basicspace_REG, 16},
    {"_basicspace_REG2", (DL_FUNC) &_basicspace_REG2, 16},
    {"_basicspace_REG2T", (DL_FUNC) &_basicspace_REG2T, 15},
    {"_basicspace_REGA", (DL_FUNC) &_basicspace_REGA, 8},
    {"_basicspace_REGAT", (DL_FUNC) &_basicspace_REGAT, 7},
    {"_basicspace_REGT", (DL_FUNC) &_basicspace_REGT, 15},
    {"_basicspace_RSQUR", (DL_FUNC) &_basicspace_RSQUR, 8},
    {"_basicspace_blackboxf_wrapper", (DL_FUNC) &_basicspace_blackboxf_wrapper, 15},
    {"_basicspace_blackboxt_wrapper", (DL_FUNC) &_basicspace_blackboxt_wrapper, 15},
    {"_basicspace_mckalnew_wrapper", (DL_FUNC) &_basicspace_mckalnew_wrapper, 13},
    {NULL, NULL, 0}
};

RcppExport void R_init_basicspace(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
